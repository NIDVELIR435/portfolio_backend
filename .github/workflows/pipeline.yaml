name: Deploy to EC2

on:
  push:
    branches:
      - master
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH tunnel
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.BASTION_IP }}.${{ secrets.AWS_REGION }}.compute.amazonaws.com
          username: ${{ secrets.BASTION_USERNAME }}
          key: ${{ secrets.AWS_PIPELINE_PRIVATE_KEY }}
          port: 22
          proxy_port: 5432
          proxy_host: ${{ secrets.RDS_ENDPOINT}}:5432  # <prefix>.eu-west-2.rds.amazonaws.com

      - name: Check and Execute migrations
        run: |
          POSTGRES_PASSWORD=${{ secrets.RDS_PASSWORD }} \
          POSTGRES_DB=${{ secrets.RDS_DB }} \
          POSTGRES_PORT=5432 \
          yarn migration:run

      - name: Build docker image
        run: docker build --target production -t portfolio_backend .

      - name: Set AWS configuration
        run: |
          aws configure set default.region ${{ secrets.AWS_REGION }}
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to AWS ECR
        run: |
          DOCKER_PASSWORD=$(aws ecr get-login-password)
          docker login -u AWS -p $DOCKER_PASSWORD https://${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Push Docker image to AWS ECR
        run: |
          docker tag portfolio_backend:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/portfolio_backend:latest
          DOCKER_CLIENT_TIMEOUT=120s docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/portfolio_backend:latest

      - name: Deploy AWS ECS task definition
        run: |
          aws ecs update-service \
          --cluster portfolio-dev \
          --service backend-dev \
          --force-new-deployment \
          --task-definition backend \
          --query 'service.deployments[0].{RolloutState:rolloutState}' \
          --output text

      - name: Waits while AWS ECS service became stable
        run: |
          aws ecs wait services-stable \
          --cluster portfolio-dev \
          --service backend-dev
